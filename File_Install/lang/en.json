{
  "ERROR_NEED_ROOT": "This script must be run as root (sudo).",
  "ERROR_MISSING_PACKAGE": "One or more required packages are not installed. Run: sudo apt install python3 python3-venv python3-pip",
  "ERROR_MISSING_REQUIREMENTS": "The requirements.txt file is missing at the root of the project.",
  "ERROR_MISSING_SCRIPT": "One or more installation scripts are missing in File_Install/",
  "ERROR_SCRIPT1": "Error while running set_1_base.py",
  "ERROR_SCRIPT2": "Error while running set_2_database.py",
  "ERROR_SCRIPT3": "Error while running set_3_services.py",
  "ERROR_SCRIPT4": "Error while running set_4_permissions.py",
  "ERROR_MISSING_PLAYERS": "The file players.py is missing in ./bot/",
  "ERROR_COMPILE_FAILED": "Compilation of players.py failed. players.out not generated.",
  "STEP_CHECK_PREREQUIS": "Checking system prerequisites (python3, python3-venv, python3-pip)",
  "STEP_CREATE_VENV": "Creating Python virtual environment (.venv)",
  "STEP_INSTALL_DEP": "Installing Python dependencies",
  "STEP_1": "STEP 1: Web deployment and base instance setup",
  "STEP_2": "STEP 2: Creating databases and tables",
  "STEP_3": "STEP 3: Deploying systemd services + bot",
  "STEP_4": "STEP 4: Permissions, sudoers, and admin account creation",
  "STEP_COMPILE_BOT": "Compiling players.py into players.out (PyInstaller)",
  "OK_VENV_CREATED": "Virtual environment created",
  "OK_DEP_INSTALLED": "Python dependencies installed",
  "OK_STEP1": "Web deployment OK",
  "OK_STEP2": "Database OK",
  "OK_STEP3": "Services OK",
  "OK_COMPILE_BOT": "players.out compilation OK",
  "OK_STEP4": "Permissions and admin accounts OK",
  "INSTALL_DONE": "INSTALLATION COMPLETE",
  "INSTALL_NOTE": "Remember to check permissions on DATA/ and complete webhooks or manual options if needed.",
  "ERROR_ROOT": "This script must be run as root (sudo).",
  "ERROR_UTF8": "The file {file} is not UTF-8! {err}",
  "FATAL_UTF8": "The config file must be UTF-8 encoded!",
  "ERROR_MISSING_SITE": "Website folder missing: {path}",
  "ERROR_MISSING_DATA": "DATA folder missing: {path}",
  "STEP_COMPOSER": "[ACTION] composer install in site/beammp-web ...",
  "ERROR_COMPOSER": "[ERROR] composer install failed.",
  "OK_COMPOSER": "[OK] PHP dependencies installed.",
  "INSTANCE": "Instance",
  "OK_DIR_CREATED": "[OK] Folder {path} ready",
  "WARN_OLD_SYMLINK": "[WARN] Old beammp-web symlink removed",
  "OK_SYMLINK": "[OK] Symlink beammp-web -> {src}",
  "OK_DATA_COPY": "[OK] DATA copied",
  "INFO_LISTEN": "[INFO] Added Listen {port} to ports.conf",
  "OK_VHOST": "[OK] Vhost {name} (port {port}) ready",
  "OK_ALL_VHOSTS": "[OK] All vhosts are active.",
  "STEP_PATCH": "[ACTION] Patching php.ini: {file}",
  "OK_PATCHED": "[OK] {file} modified, backup saved as .bak",
  "WARN_NO_PHPINI": "[WARN] No Apache php.ini file found!",
  "OK_DIR_RESOURCE": "[OK] BeamMP folders created for '{name}'",
  "OK_BOOTSTRAP": "[OK] bootstrap.php copied for {name}",
  "ERROR_BOOTSTRAP": "[ERROR] bootstrap.php {name}: {err}",
  "OK_ENV": "[OK] .env generated for {name}",
  "NOTE_WEBHOOKS": "Complete webhooks in each .env file if needed.",
  "STEP1": "STEP 1: Instance creation and symlinks",
  "STEP2": "STEP 2: Apache vhost generation",
  "STEP3": "STEP 3: Patching Apache php.ini",
  "STEP4": "STEP 4: BeamMP Resources folders",
  "STEP5": "STEP 5: Copying bootstrap.php",
  "STEP6": "STEP 6: .env generation",
  "ERROR_CONFIG_MISSING": "[ERROR] Config file missing: {path}",
  "INFO_DB_CONNECT": "[INFO] Connecting to MariaDB ({user}@localhost)...",
  "ERROR_DB_CONN": "[ERROR] Unable to connect to MariaDB: {err}",
  "OK_DB_INIT": "[OK] Database and 'users' table created/updated",
  "ERROR_DB_INIT": "[ERROR] DB/table users initialization: {err}",
  "INFO_INSTANCE": "[INFO] Setting up SQL instance '{name}'",
  "OK_INSTANCE": "[OK] Instance '{name}': tables OK",
  "ERROR_INSTANCE": "[ERROR] SQL instance setup '{name}': {err}",
  "OK_ALL_DONE": "[OK] SQL setup completed for all instances",
  "ERROR_MISSING_MESSAGES": "[ERROR] messages.json missing: {path}",
  "ERROR_SYMLINK": "[ERROR] Symlink {dest}: {err}",
  "OK_INSTANCE_READY": "[OK] Instance folder ready: {path}",
  "OK_SERVICE_PLAYERS": "[OK] Service players-{name}.service active and running",
  "OK_SERVICE_BEAMMP": "[OK] Service beammp-{name}.service active and running",
  "TODO_WEBHOOK": "[TODO] Complete 'webhook_url' in {path}",
  "TITLE_PERMS_CONFIG": "PERMISSIONS AND USER CONFIGURATION",
  "INFO_SUDOERS_LINE": "[INFO] Sudoers line to add:",
  "WARN_SUDOERS_EXISTS": "[WARNING] {file} already exists. Overwrite? (y/N): ",
  "MSG_ABORT": "Operation cancelled.",
  "ERROR_SUDOERS_SYNTAX": "[ERROR] Invalid sudoers syntax",
  "OK_SUDOERS_INSTALLED": "[OK] Sudoers rights installed in {file}",
  "ERROR_USER_NOT_FOUND": "User {user} not found!",
  "FIX_ADD_GX": "Add g+x to {path} (group {group})",
  "FIX_ADD_WWWDATA_GROUP": "Add www-data to group {group}",
  "OK_ALL_PATHS_ACCESSIBLE": "[OK] All required paths are already accessible by www-data.",
  "ERROR_PATHS": "\\nProblems detected on {n} folders/files:",
  "PROP": "  Owner: {owner} | Group: {group} | Mode: {mode}",
  "ACTIONS_AVAILABLE": "Available actions:",
  "ACTION_AUTO": "  1. Automatically apply changes (at your own risk)",
  "ACTION_TXT": "  2. Generate a .txt file with commands to run manually",
  "ACTION_QUIT": "  3. Quit without making changes",
  "CHOICE": "Your choice? [1/2/3]: ",
  "WARN_APPLY_MODIF": "WARNING: These actions will modify groups and permissions on your system.",
  "CONFIRM_EXEC_AUTO": "Confirm automatic execution? [y/N]: ",
  "OK_MODIFS_APPLIED": "[OK] Changes applied.",
  "OK_TXT_GENERATED": "\\n[OK] File generated here: {out}",
  "MSG_NO_CHANGE": "Exiting without changes.",
  "INFO_EXPECTED_OWNER": "[INFO] Expected owner: {user}:{group}",
  "WARN_DIR_MISSING": "[WARN] Folder missing (ignored): {path}",
  "ACTION_CORRECT_OWNER": "[ACTION] Correcting owner on {path}",
  "ACTION_CORRECT_RIGHTS": "[ACTION] Correcting permissions on {path}",
  "ACTION_CHMOD_770": "[ACTION] Applying recursive chmod 770 to {dir}",
  "OK_CHMOD_770": "[OK] chmod 770 applied to {dir}",
  "WARN_SITE_DIR_MISSING": "[WARN] Folder {dir} missing, chmod 770 not applied.",
  "OK_GROUP_W_APPLIED": "[OK] group+w changes applied:",
  "ENTER_USERNAME": "Enter the user's username: ",
  "REQ_USERNAME": "Username is required: ",
  "ENTER_PASSWORD": "Enter the password: ",
  "CONFIRM_PASSWORD": "Confirm the password: ",
  "PASS_NO_MATCH": "Passwords do not match, please try again.",
  "PASS_EMPTY": "Password is empty, please try again.",
  "CHOOSE_ACCOUNT_TYPE": "Account type:\\n1 - Admin\\n2 - SuperAdmin",
  "ENTER_ACCOUNT_TYPE": "Enter 1 or 2: ",
  "INVALID_CHOICE": "Invalid choice. Please try again.",
  "DB_CONN_FAILED": "[ERROR] Database connection failed: {error}",
  "ERR_USER_EXISTS": "[ERROR] The username '{pseudo}' already exists!",
  "DB_INSERT_FAILED": "[ERROR] User insertion failed: {error}",
  "OK_USER_ADDED": "[OK] User successfully added!",
  "WEB_ACCESS": "Web access for each instance:",
  "WEB_INSTANCE": "  - http://{ip}:{port} (beammpweb-{name})",
  "CREDENTIALS": "\\nUsername: {pseudo}",
  "SHOW_PASS": "Would you like to display the password? (1=yes, 2=no): ",
  "YOUR_PASSWORD": "\\nPassword: {pwd}",
  "RESTART_APACHE": "Restarting Apache service",
  "OK_APACHE_RESTARTED": "Apache service restarted",
  "CHOOSE_ACCOUNT_TYPE_1": "Account type:",
  "CHOOSE_ACCOUNT_TYPE_2": "1 - Admin",
  "CHOOSE_ACCOUNT_TYPE_3": "2 - SuperAdmin",
  "ACTION_CHMOD_770": "Applying chmod 770 permissions on {dir}",
  "ACTION_CHOWN": "Changing ownership of {dir} to {user}:www-data"
}
